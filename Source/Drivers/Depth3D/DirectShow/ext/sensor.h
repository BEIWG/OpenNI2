#ifndef SENSOR_H			/* prevent circular inclusions */
#define SENSOR_H			/* by using protection macros */

#include "sl1000py_defs.h"
#include "SVCeuctl.h"
//#include <stdint.h>

#define VRES_W   (1024)
#define VRES_H   (800)

#define DevIDAR0144   0x20
#define DevIDOV9712   0x60
#define _ONSEMI_
#define _OMNI_

#ifdef _ONSEMI_
static unsigned short reg_list_AR0144_SEQ[][3] =
{
{0x01, 200   , 0x0000},
{0x00, 0x301A, 0x00D9}, // RESET_REGISTER
{0x00, 0x3F4C, 0x4B3F}, // PIX_DEF_1D_DDC_LO_DEF
{0x00, 0x3F4C, 0x003F}, // PIX_DEF_1D_DDC_LO_DEF
{0x00, 0x3F4E, 0x5718}, // PIX_DEF_1D_DDC_HI_DEF
{0x00, 0x3F4E, 0x0018}, // PIX_DEF_1D_DDC_HI_DEF
{0x00, 0x3F50, 0x401F}, // PIX_DEF_1D_DDC_EDGE
{0x00, 0x3F50, 0x17DF}, // PIX_DEF_1D_DDC_EDGE
{0x01, 200   , 0x0000},
{0x00, 0x301A, 0x30D8}, // RESET_REGISTER
{0x00, 0x3ED6, 0x3CB5}, // DAC_LD_10_11
{0x00, 0x3ED8, 0x8765}, // DAC_LD_12_13
{0x00, 0x3EDA, 0x8888}, // DAC_LD_14_15
{0x00, 0x3EDC, 0x97FF}, // DAC_LD_16_17
{0x00, 0x3EF8, 0x6522}, // DAC_LD_44_45
{0x00, 0x3EFA, 0x2222}, // DAC_LD_46_47
{0x00, 0x3EFC, 0x6666}, // DAC_LD_48_49
{0x00, 0x3F00, 0xAA05}, // DAC_LD_52_53
{0x00, 0x3EE2, 0x180E}, // DAC_LD_22_23
{0x00, 0x3EE4, 0x0808}, // DAC_LD_24_25
{0x00, 0x3EEA, 0x2A09}, // DAC_LD_30_31
{0x00, 0x3060, 0x000D}, // ANALOG_GAIN
{0x00, 0x3092, 0x00CF}, // ROW_NOISE_CONTROL
{0x00, 0x3268, 0x0030}, // SEQUENCER_CONTROL
{0x00, 0x3786, 0x0006}, // DIGITAL_CTRL_1
{0x00, 0x3F4A, 0x0F70}, // DELTA_DK_PIX_THRES
{0x00, 0x306E, 0x4810}, // DATAPATH_SELECT
{0x00, 0x3064, 0x1802}, // SMIA_TEST
{0x00, 0x3EF6, 0x804D}, // DAC_LD_42_43
{0x00, 0x3180, 0xC08F}, // DELTA_DK_CONTROL
{0x00, 0x30BA, 0x7623}, // DIGITAL_CTRL
{0x00, 0x3176, 0x0480}, // DELTA_DK_ADJUST_GREENR
{0x00, 0x3178, 0x0480}, // DELTA_DK_ADJUST_RED
{0x00, 0x317A, 0x0480}, // DELTA_DK_ADJUST_BLUE
{0x00, 0x317C, 0x0480}, // DELTA_DK_ADJUST_GREENB
{0xff, 0x0000, 0x0000} // RESET_REGISTER
};

static unsigned short reg_list_AR0144_1024800[][3] =
{
	{ 0x00, 0x302A, 0x0006 },		//VT_PIX_CLK_DIV = 6		   
	{ 0x00, 0x302C, 0x0002 },		//VT_SYS_CLK_DIV = 2
	{ 0x00, 0x302E, 0x0002 },		//PRE_PLL_CLK_DIV = 2
	{ 0x00, 0x3030, 0x0030 },		//PLL_MULTIPLIER = 48
	{ 0x00, 0x3036, 0x000C },		//OP_PIX_CLK_DIV = 12
	{ 0x00, 0x3038, 0x0001 },		//OP_SYS_CLK_DIV = 1
	{0x00, 0x30B0, 0x0038}, 	// DIGITAL_TEST
	{0x01, 100   , 0x0000},
	{0x00, 0x3002, 0x000a}, 	// Y_ADDR_START 10
	{0x00, 0x3004, 0x000a+128},		//X_ADDR_START = 10
	{0x00, 0x3006, 0x0329},		//Y_ADDR_END = 809
	{0x00, 0x3008, 0x0509-128},		//X_ADDR_END = 1289
	{ 0x00, 0x300A, 0x0351 },  //{0x00, 0x300A, 0x0674},		//FRAME_LENGTH_LINES = 1652
	{ 0x00,0x300C, 0x0848 },		//LINE_LENGTH_PCK = 1488 0x05D0
	{0x00, 0x3012, 0x0330},		//COARSE_INTEGRATION_TIME = 1651
	{0x00, 0x30A2, 0x0001}, // X_ODD_INC
	{0x00, 0x30A6, 0x0001}, // Y_ODD_INC
	{0x00, 0x3040, 0x0000}, // READ_MODE
	{0x00, 0x31AE, 0x0200}, // SERIAL_FORMAT
	{0x00, 0x3040, 0x0c00}, // READ_MODE
	{0x00, 0x30A8, 0x0001}, // Y_ODD_INC_CB
	{0x00, 0x3040, 0x3000}, // READ_MODE 0x3000
	{0x00, 0x30AE, 0x0001}, // X_ODD_INC_CB
	{0x00, 0x3060, 0x000d}, // GAIN
	{0x00, 0x3064, 0x1882}, // SMIA_TEST
	{0x00, 0x3064, 0x1982}, // SMIA_TEST
	{0x00, 0x3064, 0x1802}, // SMIA_TEST
	{0x00, 0x3028, 0x0010}, // ROW_SPEED
	//{ 0x00, 0x3046, 0x0100 }, // FLASH
	{ 0x00, 0x3270, 0x0100 }, // LED FLASH
	{0x00, 0x301A, 0x39D8}, // RESET_REGISTER {0x00, 0x301A, 0x30DC}
	{0xff, 0x0000, 0x0000}  // RESET_REGISTER
};

static unsigned short reg_list_AR0144_1024800_C[][3] =
{
	{ 0x00, 0x302A, 0x0006 },		//VT_PIX_CLK_DIV = 6		   
	{ 0x00, 0x302C, 0x0002 },		//VT_SYS_CLK_DIV = 2
	{ 0x00, 0x302E, 0x0002 },		//PRE_PLL_CLK_DIV = 2
	{ 0x00, 0x3030, 0x0030 },		//PLL_MULTIPLIER = 48
	{ 0x00, 0x3036, 0x000C },		//OP_PIX_CLK_DIV = 12
	{ 0x00, 0x3038, 0x0001 },		//OP_SYS_CLK_DIV = 1
	{ 0x00, 0x30B0, 0x0038 }, 	// DIGITAL_TEST
	{ 0x01, 100, 0x0000 },
	{ 0x00, 0x3002, 0x000a }, 	// Y_ADDR_START 10
	{ 0x00, 0x3004, 0x000a + 128 },		//X_ADDR_START = 10
	{ 0x00, 0x3006, 0x0329 },		//Y_ADDR_END = 809
	{ 0x00, 0x3008, 0x0509 - 128 },		//X_ADDR_END = 1289
	{ 0x00, 0x300A, 0x0351 },  //{0x00, 0x300A, 0x0674},		//FRAME_LENGTH_LINES = 1652
	{ 0x00, 0x300C, 0x0848 },		//LINE_LENGTH_PCK = 1488 0x05D0
	{ 0x00, 0x3012, 0x0330 - 0x300 },		//COARSE_INTEGRATION_TIME = 1651
	{ 0x00, 0x30A2, 0x0001 }, // X_ODD_INC
	{ 0x00, 0x30A6, 0x0001 }, // Y_ODD_INC
	{ 0x00, 0x3040, 0x0000 }, // READ_MODE
	{ 0x00, 0x31AE, 0x0200 }, // SERIAL_FORMAT
	{ 0x00, 0x3040, 0x0c00 }, // READ_MODE
	{ 0x00, 0x30A8, 0x0001 }, // Y_ODD_INC_CB
	{ 0x00, 0x3040, 0x3000 }, // READ_MODE 0x3000
	{ 0x00, 0x30AE, 0x0001 }, // X_ODD_INC_CB
	{ 0x00, 0x3060, 0x000d }, // GAIN
	{ 0x00, 0x3064, 0x1882 }, // SMIA_TEST
	{ 0x00, 0x3064, 0x1982 }, // SMIA_TEST
	{ 0x00, 0x3064, 0x1802 }, // SMIA_TEST
	{ 0x00, 0x3028, 0x0010 }, // ROW_SPEED
	//{ 0x00, 0x3046, 0x0100 }, // FLASH
	{ 0x00, 0x3270, 0x0100 }, // LED FLASH
	{ 0x00, 0x301A, 0x39D8 }, // RESET_REGISTER {0x00, 0x301A, 0x30DC}
	{ 0xff, 0x0000, 0x0000 }  // RESET_REGISTER
};

static unsigned short reg_list_AR0144_640400_bin[][3] =
{
{0x00, 0x302A, 0x0006},		//VT_PIX_CLK_DIV = 6
{0x00, 0x302C, 0x0004},		//VT_SYS_CLK_DIV = 1
{0x00, 0x302E, 0x0002},		//PRE_PLL_CLK_DIV = 4
{0x00, 0x3030, 0x0024},		//PLL_MULTIPLIER = 74
{0x00, 0x3036, 0x000C},		//OP_PIX_CLK_DIV = 12
{0x00, 0x3038, 0x0001},		//OP_SYS_CLK_DIV = 1
{0x00, 0x30B0, 0x00B8}, 	// DIGITAL_TEST
{0x01, 100   , 0x0000},
{0x00, 0x3002, 0x000a}, 	// Y_ADDR_START 10
{0x00, 0x3004, 0x000a},		//X_ADDR_START = 10
{0x00, 0x3006, 0x0329},		//Y_ADDR_END = 809
{0x00, 0x3008, 0x0509},		//X_ADDR_END = 1289
{0x00, 0x300A, 0x01B0},  //{0x00, 0x300A, 0x0674},		//FRAME_LENGTH_LINES = 1652
{0x00, 0x300C, 0x05D0},		//LINE_LENGTH_PCK = 1488 0x05D0
{0x00, 0x3012, 0x01A0},		//COARSE_INTEGRATION_TIME = 1651
{0x00, 0x30A2, 0x0003}, // X_ODD_INC
{0x00, 0x30A6, 0x0003}, // Y_ODD_INC
{0x00, 0x3040, 0x0000}, // READ_MODE
{0x00, 0x31AE, 0x0200}, // SERIAL_FORMAT
{0x00, 0x3040, 0x0c00}, // READ_MODE
{0x00, 0x30A8, 0x0003}, // Y_ODD_INC_CB
{0x00, 0x3040, 0x3000}, // READ_MODE
{0x00, 0x30AE, 0x0003}, // X_ODD_INC_CB
{0x00, 0x3060, 0x003d}, // GAIN
{0x00, 0x3064, 0x1882}, // SMIA_TEST
{0x00, 0x3064, 0x1982}, // SMIA_TEST
{0x00, 0x3064, 0x1802}, // SMIA_TEST
{0x00, 0x3028, 0x0010}, // ROW_SPEED
{0x00, 0x301A, 0x30DC}, // RESET_REGISTER
{0xff, 0x0000, 0x0000}  // RESET_REGISTER
};
#endif

#ifdef _OMNI_

static unsigned short reg_list_ov9712_1024800[][3] =
{
	{ 0X00, 0X0012, 0X0080 },
	{ 0x01, 500,    0x0000 },
	{ 0X00, 0X001E, 0X0007 },
	{ 0X00, 0X005F, 0X0018 },
	{ 0X00, 0X0069, 0X0004 },
	{ 0X00, 0X0065, 0X002A },
	{ 0X00, 0X0068, 0X000A },
	{ 0X00, 0X0039, 0X0028 },
	{ 0X00, 0X004D, 0X0090 },
	{ 0X00, 0X00C1, 0X0080 },
	{ 0x00, 0x00C2, 0x0041 },//
	{ 0x00, 0x00C8, 0x0036 },//
	{ 0x00, 0x00CB, 0x00A5 },//
	{ 0x00, 0x00D0, 0x0005 },//
	{ 0x00, 0x00D1, 0x00D0 },//
	{ 0X00, 0X000C, 0X0030 },
	{ 0X00, 0X006D, 0X0002 },
	{ 0X00, 0X0096, 0X00F1 },
	{ 0X00, 0X00BC, 0X0068 },
	{ 0X00, 0X0012, 0X0000 },
	{ 0X00, 0X003B, 0X0000 },
	{ 0X00, 0X0097, 0X0080 },
	{ 0X00, 0X0017, 0X0025 },
	{ 0X00, 0X0018, 0X00A2 },//0X00A2
	{ 0X00, 0X0019, 0X0001 },
	{ 0X00, 0X001A, 0X00CA },
	{ 0X00, 0X0003, 0X000A },
	{ 0X00, 0X0032, 0X0007 },
	{ 0X00, 0X0098, 0X0000 },
	{ 0X00, 0X0099, 0X0000 },
	{ 0X00, 0X009A, 0X0000 },
	{ 0X00, 0X0057, 0X0000 },
	{ 0X00, 0X0058, 0X00C8 },
	{ 0X00, 0X0059, 0X0080 },//output horizonatl 0X00A0
	{ 0X00, 0X004C, 0X0013 },
	{ 0X00, 0X004B, 0X0036 },
	{ 0X00, 0X003D, 0X003C },
	{ 0X00, 0X003E, 0X0003 },
	{ 0X00, 0X00BD, 0X00A0 },
	{ 0X00, 0X00BE, 0X00C8 },
	{ 0X00, 0X0096, 0X00F9 },
	{ 0X00, 0X009E, 0X0000 },
	{ 0X00, 0X009F, 0X0080 },
	{ 0X00, 0X00A0, 0X00F1 },
	{ 0X00, 0X00A1, 0X006A },
	{ 0X00, 0X00A2, 0X0000 },
	{ 0X00, 0X00A3, 0X0080 },
	{ 0X00, 0X00A4, 0X0090 },
	{ 0X00, 0X00A5, 0X0012 },
	{ 0X00, 0X00A6, 0X0016 },
	{ 0X00, 0X00A7, 0X00C2 },
	{ 0X00, 0X00A8, 0X0084 },
	{ 0X00, 0X00A9, 0X0080 },
	{ 0X00, 0X00AA, 0X0090 },
	{ 0X00, 0X00AB, 0X0012 },
	{ 0X00, 0X00AC, 0X001C },
	{ 0X00, 0X00AD, 0X00C2 },
	{ 0X00, 0X00AE, 0X0085 },
	{ 0X00, 0X00AF, 0X0080 },
	{ 0X00, 0X00B0, 0X0090 },
	{ 0X00, 0X00B1, 0X0012 },
	{ 0X00, 0X00B2, 0X0018 },
	{ 0X00, 0X00B3, 0X00C2 },
	{ 0X00, 0X00B4, 0X0085 },
	{ 0X00, 0X00B5, 0X0000 },
	{ 0X00, 0X004E, 0X0055 },
	{ 0X00, 0X004F, 0X0055 },
	{ 0X00, 0X0050, 0X0055 },
	{ 0X00, 0X0051, 0X0055 },
	{ 0X00, 0X0024, 0X0055 },
	{ 0X00, 0X0025, 0X0040 },
	{ 0X00, 0X0026, 0X00A1 },
	{ 0X00, 0X005C, 0X0079 },
	{ 0X00, 0X005D, 0X0000 },
	{ 0X00, 0X0011, 0X0001 },
	{ 0X00, 0X002A, 0X0098 },
	{ 0X00, 0X002B, 0X0006 },
	{ 0X00, 0X002D, 0X0000 },
	{ 0X00, 0X002E, 0X0000 },
	{ 0X00, 0X0013, 0X0085 },
	{ 0X00, 0X0014, 0X0000 },
	{ 0xff, 0x0000, 0x0000 }
};

static unsigned short reg_list_ov9712_1024800_1[][3] =
{
	{ 0x00, 0x12, 0x80 },
	{ 0x01, 200,  0x00 },
	{ 0x00, 0x09, 0x10 },
	{ 0x00, 0x1e, 0x07 },
	{ 0x00, 0x5f, 0x18 },
	{ 0x00, 0x69, 0x04 },
	{ 0x00, 0x65, 0x2a },
	{ 0x00, 0x68, 0x0a },
	{ 0x00, 0x39, 0x28 },
	{ 0x00, 0x4d, 0x90 },
	{ 0x00, 0xc1, 0x80 },
	{ 0x00, 0xC2, 0x41 },
	{ 0x00, 0xC8, 0x36 },
	{ 0x00, 0x0c, 0x30 },
	{ 0x00, 0x6d, 0x02 },
	{ 0x00, 0x96, 0xf1 },
	{ 0x00, 0xbc, 0x68 },
	{ 0x00, 0x12, 0x00 },
	{ 0x00, 0x3b, 0x00 },
	{ 0x00, 0x97, 0x80 },
	{ 0x00, 0x17, 0x25 },
	{ 0x00, 0x18, 0xa2 },
	{ 0x00, 0x19, 0x01 },
	{ 0x00, 0x1a, 0xca },
	{ 0x00, 0x03, 0x0a },
	{ 0x00, 0x32, 0x07 },
	{ 0x00, 0x98, 0x40 },	/*{0x98, 0x00},*/
	{ 0x00, 0x99, 0xA0 },	/*{0x99, 0x00},*/
	{ 0x00, 0x9a, 0x01 },	/*{0x9a, 0x00},*/
	{ 0x00, 0x57, 0x00 },
	{ 0x00, 0x58, 0x78 },	/*{0x58, 0xc8},*/
	{ 0x00, 0x59, 0x50 },	/*{0x59, 0xa0},*/
	{ 0x00, 0x4c, 0x13 },
	{ 0x00, 0x4b, 0x36 },
	{ 0x00, 0x3d, 0x3c },
	{ 0x00, 0x3e, 0x03 },
	{ 0x00, 0xbd, 0x50 },	/*{0xbd, 0xa0},*/
	{ 0x00, 0xbe, 0x78 },	/*{0xbe, 0xc8},*/
	{ 0x00, 0x4e, 0x55 },
	{ 0x00, 0x4f, 0x55 },
	{ 0x00, 0x50, 0x55 },
	{ 0x00, 0x51, 0x55 },
	{ 0x00, 0x24, 0x55 },
	{ 0x00, 0x25, 0x40 },
	{ 0x00, 0x26, 0xa1 },
	{ 0x00, 0x5c, 0x59 },
	{ 0x00, 0x5d, 0x00 },
	{ 0x00, 0x11, 0x00 },
	{ 0x00, 0x2a, 0x98 },
	{ 0x00, 0x2b, 0x06 },
	{ 0x00, 0x2d, 0x00 },
	{ 0x00, 0x2e, 0x00 },
	{ 0x00, 0x13, 0xa5 },
	{ 0x00, 0x14, 0x40 },
	{ 0x00, 0x4a, 0x00 },
	{ 0x00, 0x49, 0xce },
	{ 0x00, 0x22, 0x03 },
	{ 0x00, 0x09, 0x00 },
	{ 0xff, 0x00, 0x00 }
};


static unsigned short reg_list_ov9712_1024800_2[][3] =
{
	{ 0x00, 0x12, 0x80 },
	{ 0x00, 0x09, 0x10 },
	{ 0x00, 0x1e, 0x07 },
	{ 0x00, 0x5f, 0x18 },
	{ 0x00, 0x69, 0x04 },
	{ 0x00, 0x65, 0x2a },
	{ 0x00, 0x68, 0x0a },
	{ 0x00, 0x39, 0x28 },
	{ 0x00, 0x4d, 0x90 },
	{ 0x00, 0xc1, 0x80 },
	{ 0x00, 0x0c, 0x30 },
	{ 0x00, 0x6d, 0x02 },
	{ 0x00, 0x96, 0xf1 },
	{ 0x00, 0xbc, 0x68 },
	{ 0x00, 0x12, 0x00 },
	{ 0x00, 0x3b, 0x00 },
	{ 0x00, 0x97, 0x80 },
	{ 0x00, 0x17, 0x25 },
	{ 0x00, 0x18, 0xa2 },
	{ 0x00, 0x19, 0x01 },
	{ 0x00, 0x1a, 0xca },
	{ 0x00, 0x03, 0x0a },
	{ 0x00, 0x32, 0x07 },
	{ 0x00, 0x98, 0x40 },	/*{0x98, 0x00},*/
	{ 0x00, 0x99, 0xA0 },	/*{0x99, 0x00},*/
	{ 0x00, 0x9a, 0x01 },	/*{0x9a, 0x00},*/
	{ 0x00, 0x57, 0x00 },
	{ 0x00, 0x58, 0x78 },	/*{0x58, 0xc8},*/
	{ 0x00, 0x59, 0x50 },	/*{0x59, 0xa0},*/
	{ 0x00, 0x4c, 0x13 },
	{ 0x00, 0x4b, 0x36 },
	{ 0x00, 0x3d, 0x3c },
	{ 0x00, 0x3e, 0x03 },
	{ 0x00, 0xbd, 0x50 },	/*{0xbd, 0xa0},*/
	{ 0x00, 0xbe, 0x78 },	/*{0xbe, 0xc8},*/
	{ 0x00, 0x4e, 0x55 },
	{ 0x00, 0x4f, 0x55 },
	{ 0x00, 0x50, 0x55 },
	{ 0x00, 0x51, 0x55 },
	{ 0x00, 0x24, 0x55 },
	{ 0x00, 0x25, 0x40 },
	{ 0x00, 0x26, 0xa1 },
	{ 0x00, 0x5c, 0x59 },
	{ 0x00, 0x5d, 0x00 },
	{ 0x00, 0x11, 0x00 },
	{ 0x00, 0x2a, 0x98 },
	{ 0x00, 0x2b, 0x06 },
	{ 0x00, 0x2d, 0x00 },
	{ 0x00, 0x2e, 0x00 },
	{ 0x00, 0x13, 0xa5 },
	{ 0x00, 0x14, 0x40 },
	{ 0x00, 0x4a, 0x00 },
	{ 0x00, 0x49, 0xce },
	{ 0x00, 0x22, 0x03 },
	{ 0x00, 0x09, 0x00 },
	{ 0xff, 0x00, 0x00 }
};

static unsigned short reg_list_ov9712_1024800_3[][3] =
{
	{ 0x00, 0X0012, 0X0080 },
	{ 0x00, 0X001E, 0X0007 },
	{ 0x00, 0X005F, 0X0018 },
	{ 0x00, 0X0069, 0X0004 },
	{ 0x00, 0X0065, 0X002A },
	{ 0x00, 0X0068, 0X000A },
	{ 0x00, 0X0039, 0X0028 },
	{ 0x00, 0X004D, 0X0090 },
	{ 0x00, 0X00C1, 0X0080 },
	{ 0x00, 0X000C, 0X0030 },
	{ 0x00, 0X006D, 0X0002 },
	{ 0x00, 0X0096, 0X00F1 },
	{ 0x00, 0X00BC, 0X0068 },
	{ 0x00, 0X0012, 0X0000 },
	{ 0x00, 0X003B, 0X0000 },
	{ 0x00, 0X0097, 0X0080 },
	{ 0x00, 0X0017, 0X0025 },
	{ 0x00, 0X0018, 0X00A2 },
	{ 0x00, 0X0019, 0X0001 },
	{ 0x00, 0X001A, 0X00CA },
	{ 0x00, 0X0003, 0X000A },
	{ 0x00, 0X0032, 0X0007 },
	{ 0x00, 0X0098, 0X0000 },
	{ 0x00, 0X0099, 0X0000 },
	{ 0x00, 0X009A, 0X0000 },
	{ 0x00, 0X0057, 0X0000 },
	{ 0x00, 0X0058, 0X00C8 },
	{ 0x00, 0X0059, 0X00A0 },
	{ 0x00, 0X004C, 0X0013 },
	{ 0x00, 0X004B, 0X0036 },
	{ 0x00, 0X003D, 0X003C },
	{ 0x00, 0X003E, 0X0003 },
	{ 0x00, 0X00BD, 0X00A0 },
	{ 0x00, 0X00BE, 0X00C8 },
	{ 0x00, 0X0096, 0X00F9 },//
	{ 0x00, 0X009E, 0X0000 },
	{ 0x00, 0X009F, 0X0080 },
	{ 0x00, 0X00A0, 0X00F1 },
	{ 0x00, 0X00A1, 0X006A },
	{ 0x00, 0X00A2, 0X0000 },
	{ 0x00, 0X00A3, 0X0080 },
	{ 0x00, 0X00A4, 0X0090 },
	{ 0x00, 0X00A5, 0X0012 },
	{ 0x00, 0X00A6, 0X0016 },
	{ 0x00, 0X00A7, 0X00C2 },
	{ 0x00, 0X00A8, 0X0084 },
	{ 0x00, 0X00A9, 0X0080 },
	{ 0x00, 0X00AA, 0X0090 },
	{ 0x00, 0X00AB, 0X0012 },
	{ 0x00, 0X00AC, 0X001C },
	{ 0x00, 0X00AD, 0X00C2 },
	{ 0x00, 0X00AE, 0X0085 },
	{ 0x00, 0X00AF, 0X0080 },
	{ 0x00, 0X00B0, 0X0090 },
	{ 0x00, 0X00B1, 0X0012 },
	{ 0x00, 0X00B2, 0X0018 },
	{ 0x00, 0X00B3, 0X00C2 },
	{ 0x00, 0X00B4, 0X0085 },
	{ 0x00, 0X00B5, 0X0000 },
	{ 0x00, 0X004E, 0X0055 },
	{ 0x00, 0X004F, 0X0055 },
	{ 0x00, 0X0050, 0X0055 },
	{ 0x00, 0X0051, 0X0055 },
	{ 0x00, 0X0024, 0X0055 },
	{ 0x00, 0X0025, 0X0040 },
	{ 0x00, 0X0026, 0X00A1 },
	{ 0x00, 0X005C, 0X0059 },
	{ 0x00, 0X005D, 0X0000 },
	{ 0x00, 0X0011, 0X0001 },
	{ 0x00, 0X002A, 0X0098 },
	{ 0x00, 0X002B, 0X0006 },
	{ 0x00, 0X002D, 0X0000 },
	{ 0x00, 0X002E, 0X0000 },
	{ 0x00, 0X0013, 0X0085 },//{ 0x00, 0X0013, 0X0085 },
	{ 0x00, 0X0014, 0X0000 },
	{ 0xff, 0x0000, 0x0000 }
};

static unsigned short reg_list_ov9712_1024800_4[][3] =
{
	{ 0x00, 0x12, 0x80 },//Reset
	{ 0x00, 0x96, 0xf1 },// DSP options enable
	{ 0x00, 0xbc, 0x68 },// [7]   reserved
	{ 0x00, 0x12, 0x00 },//
	{ 0x00, 0x3b, 0x00 },// DSP Downsample
	{ 0x00, 0x97, 0x80 },// [7]   smph_mean
	{ 0x00, 0x17, 0x25 },//
	{ 0x00, 0x18, 0xA2 },//
	{ 0x00, 0x19, 0x01 },//
	{ 0x00, 0x1a, 0xCA },//
	{ 0x00, 0x03, 0x0A },//
	{ 0x00, 0x32, 0x07 },//
	{ 0x00, 0x98, 0x00 },//
	{ 0x00, 0x99, 0x00 },//
	{ 0x00, 0x9a, 0x00 },//
	{ 0x00, 0x57, 0x00 },//
	{ 0x00, 0x58, 0xC8 },//
	{ 0x00, 0x59, 0xA0 },//
	{ 0x00, 0x4c, 0x13 },//
	{ 0x00, 0x4b, 0x36 },//
	{ 0x00, 0x3d, 0x3c },//
	{ 0x00, 0x3e, 0x03 },//
	{ 0x00, 0x4e, 0x55 },//AVERAGE 
	{ 0x00, 0x4f, 0x55 },//		
	{ 0x00, 0x50, 0x55 },//
	{ 0x00, 0x51, 0x55 },//
	{ 0x00, 0x24, 0x55 },//Exposure windows
	{ 0x00, 0x25, 0x48 },//
	{ 0x00, 0x26, 0x92 },//
	{ 0x00, 0x5c, 0x59 },//
	{ 0x00, 0x5d, 0x00 },//
	{ 0x00, 0x11, 0x00 },//
	{ 0x00, 0x2a, 0x9b },//
	{ 0x00, 0x2b, 0x06 },//
	{ 0x00, 0x2d, 0x00 },//
	{ 0x00, 0x2e, 0x00 },//
	{ 0x00, 0x13, 0x85 },//
	{ 0x00, 0x14, 0x40 },//Gain Ceiling 8X
	{ 0xff, 0x00, 0x00 }
};

#endif



#endif /* end of protection macro */
